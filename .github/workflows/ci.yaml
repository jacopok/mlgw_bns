name: CI Pipeline for mlgw_bns

on:
  - push
  # - pull_request

jobs:
  build:
    runs-on: ${{matrix.platform}}
    strategy:
      matrix:
        platform: [ubuntu-latest]
        python-version: ['3.8', '3.9', '3.10']

    steps:
    # - name: Clone and install TEOBResumS repo
    #   run: |
    #     cd ..
    #     git clone https://bitbucket.org/eob_ihes/teobresums/
    # - name: Install TEOBResumS deps
    #   run: |
    #     sudo apt-get install -y libconfig-dev libgsl-dev
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install poetry
        poetry install -v --with dev --with pycbc
    - name: Run tests
      run: |
        poetry run coverage run -m pytest -v --junit-xml tests/test_results.xml
        poetry run coverage lcov

    - name: Upload Test Results
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: Test Results (Python ${{ matrix.python-version }})
        path: |
          **/*.xml

    - name: Upload coverage data to coveralls.io
      run: poetry run coveralls --service=github
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        COVERALLS_FLAG_NAME: ${{ matrix.test-name }}
        COVERALLS_PARALLEL: true

  publish-test-results:
    name: "Publish Tests Results"
    needs: build
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        with:
          files: artifacts/**/*.xml

  coveralls:
    name: Indicate completion to coveralls.io
    needs: build
    runs-on: ubuntu-latest
    container: python:3-slim
    steps:
    - name: Finished
      run: |
        pip3 install --upgrade coveralls
        coveralls --service=github --finish
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
